---
layout: post
title: Chatbots
date: 2020-06-01
comments: true
external-url:
categories: Python
---

With the pandemic, we all started using online chatting applications more than ever before to communicate with our families, friends, and even classes and work. What if we could make cool bots for these chats? A Facebook bot for your store, a Discord bot for your friends, or a Slack bot for your clubs and jobs. The possibilities are endless.

If you've never done Python before, here is a start. Coming from Java or C++, this might seem almost underwhelming, but Python allows you do to so many of the same things with a lot less work. This does have disadvantages, but this trait of Python makes it a great language for trying new ideas and adding to them quickly.

```python
print("Hello Chatbots")
```

Hosted by: Harsh Deep

## Motivation

[Introduction to Learn Python the Hard Way](https://learnpythonthehardway.org/python3/intro.html) - This is advice I honestly feel everyone new to CS should read and follow.

Keeping that in mind, for this website: 

### How to learn programming the proper way

* Every single piece of code that I show, you will type by hand. No copy pasting, no "I can see what it does, it's obvious", no "I already know this, let me move on". I want you to do this to make sure that you actually process what we're learning together. You can only copy paste if I tell you that you can. Trust me. It may feel like a small difference, but not following along like this will reduce the effectiveness of whatever you learn tenfold.
* Attention to detail: this comes from the last point, but when you type everything out yourself and look at it closely, you're forced to concentrate on what you're doing. For example, consider the difference between 5 and "5". Programming is highly precise, and errors like these can create bugs that can be quite difficult to track down if you're not prepared for them. Especially in languages like Python, every tiny detail matters.


## Tools

Set this up before we start.

* `micro` [Our guide](/micro)

* `git` - install it 

* Github - create an account 

## Getting Ready

You should finish this part before the workshop, but don't worry if you're not done since we're recording everything. All the material is written as text on the website as well.

1. If you're on Windows, I *highly* reccomend getting WSL2 (WSL 1 is also fine, just slower). For historical reasons, the command line in Windows is just not as good as Mac or Linux. Eventually, they just said, "Hey what if we had full* Linux *on* Windows?" Thus, WSL.

2. Install a recent version of Python (3.7+) on your computer and make sure to enable `pip` as well. <!-- TODO: Add more detail from web bot workshop maybe --> 

3. Set up the `micro` text editor or a different command line text editor of your choice. See the page I wrote for [micro](/micro) for more detailed instructions.

4. Install discord.py
    ```sh
    $ pip install discord.py
    ```

## Workshop

1. Create a Discord account if you don't have one.

2. Create a test Discord server (sometimes called a guild).

3. Copy over the auth setup in some environment variable.

4. Set up a "connected" message.

5. Respond to a "hello" message.

6. Create a function that we can pass things to in order to abstract out the logic (loose coupling).

## Learn More

* [FreeCodeCamp: How to Create a Discord Bot for Free with Python â€“ Full Tutorial](https://www.freecodecamp.org/news/create-a-discord-bot-with-python/) - good starter tutorial

* [Real Python: How to Make a Discord Bot in Python](https://realpython.com/how-to-make-a-discord-bot-python/) - this is the most comprehensive tutorial I liked

* [towards data science - How to build your own AI Chatbot on Discord?](https://towardsdatascience.com/how-to-build-your-own-ai-chatbot-on-discord-c6b3468189f4) - more advanced but this shows how you can start mixing in AI with chatbots as well

## Ideas

Feel free to come up with anything you want as long as it's chatbot related. Here are some ideas to help you get started, but feel free to come up with more. Don't worry if it's already been done or if someone else is doing it. The point is learning and fun. :)

* Think of a bot you've seen in real life. Could you recrete a simple subset of its features?

* Maybe a bot that could provide the user information, like recipes or your sports teams?

* Or maybe a bot that can have basic conversation with you. Could it help you break down tasks or provide you with a gratitude journal? 

* Maybe a bot that can automate something you find annoying? So you can use it to fire off commands to do some task.

* The bot doesn't have to be a Discord bot. You can make it on Slack, Facebook, IRC, or basically any chat service out there. 

## Requirements

These aren't hard requirements, but you should try your best to hit all of them.

* The chatbot connects to a real chat service, including, but not limited to: Discord, Slack, Telegram, IRC, Facebook.

* It has different responses based on different inputs.

* It displays a message on connnecting.

* There are at least two test cases where you test parts of the bots behavior out.

* This has to be available on a site like Github (feel free to use alternatives like GitLab if you prefer).

* Show images/animations/videos of your bot in action in a `README.md` file in your repository.

* Has to use a Open Source license via a `LICENSE` file